(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{319:function(t,a,s){"use strict";s.r(a);var e=s(12),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"transaction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#transaction"}},[t._v("#")]),t._v(" Transaction")]),t._v(" "),a("p",[t._v("A MySQL transaction is a process that guarantees the integrity of a series of database operations (such as updates, deletions, etc.) in a single unit of work. If any of these steps fails, the entire operation can be rolled back to ensure database consistency.")]),t._v(" "),a("p",[t._v("Properties: ACID, atomicity, consistency, isolation, durability")]),t._v(" "),a("h3",{attrs:{id:"a"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#a"}},[t._v("#")]),t._v(" A")]),t._v(" "),a("p",[t._v("Atomicity means that a transaction must be treated as an indivisible minimum unit of work, and the entire transaction is successful only if all database operations in the transaction have been successfully executed. If any SQL statement fails to be executed in a transaction, the SQL statements that have been successfully executed must also be rolled back.")]),t._v(" "),a("h3",{attrs:{id:"c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c"}},[t._v("#")]),t._v(" C")]),t._v(" "),a("p",[t._v("Consistency means that a transaction can only change the database state from one consistent state to another. Consistency in MySQL is mainly achieved by the logging mechanism, which logs all changes to the database and provides a trace record for transaction recovery.")]),t._v(" "),a("h3",{attrs:{id:"i"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#i"}},[t._v("#")]),t._v(" I")]),t._v(" "),a("p",[t._v("Isolation means that a transaction is executed without being affected by other transactions. Isolation ensures that all operations of an unfinished transaction are isolated from the database system, and the results of the execution of the transaction cannot be seen until the transaction is completed.")]),t._v(" "),a("h3",{attrs:{id:"d"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#d"}},[t._v("#")]),t._v(" D")]),t._v(" "),a("p",[t._v("Persistence means that once a transaction is committed, its modifications to the data in the database are permanent. The persistence of a transaction is not 100% durable, it can only be guaranteed from the perspective of the transaction itself, and if some external cause (such as hard disk corruption) causes a database failure, all the committed data may be lost.")]),t._v(" "),a("h2",{attrs:{id:"opening-of-the-transaction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#opening-of-the-transaction"}},[t._v("#")]),t._v(" Opening of the transaction")]),t._v(" "),a("p",[t._v("By default, each SQL statement executed by the user is automatically committed as a separate transaction. If you want to treat a set of SQL statements as a transaction, you need to explicitly open the transaction.")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("start")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("transaction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h2",{attrs:{id:"transaction-submission"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#transaction-submission"}},[t._v("#")]),t._v(" Transaction submission")]),t._v(" "),a("p",[t._v("After a transaction is explicitly enabled, each SQL statement is not automatically submitted. Instead, you need to manually submit the SQL statement. The operations in the SQL statement take effect only after the transaction is submitted.")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMIT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"transaction-rollback"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#transaction-rollback"}},[t._v("#")]),t._v(" Transaction rollback")]),t._v(" "),a("p",[t._v("If you do not want to commit the current transaction, you can cancel the transaction (that is, roll it back).")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ROLLBACK")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"tip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tip"}},[t._v("#")]),t._v(" Tip")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("Precautions when using transactions:\n** The ROLLBACK statement can only roll back uncommitted transactions. ** Committed transactions cannot be rolled back.\n** When a COMMIT statement or ROLLBACK statement is executed, the current transaction will automatically end **. ** If no transaction is committed until the end of the MySQL session after a transaction is started, the transaction is automatically rolled back. **.\n** Transactions are not allowed to be nested **. If the previous TRANSACTION has not been committed before the START TRANSACTION statement is executed, executing the START TRANSACTION statement implicitly executes the commit operation of the previous transaction.\nTransactions are mainly for data in data tables, excluding operations such as creating or deleting databases, data tables, and modifying table structures, and implicitly committing transactions when performing such operations.\n**InnoDB storage engine supports transactions **, **MyISAM storage engine does not support transactions **. MyISAM stores the data table of the engine, and operations on the data take effect immediately, regardless of whether the transaction is committed or not, and cannot be rolled back.\nSTART a TRANSACTION explicitly using the alias BEGIN or BEGIN WORK for START TRANSACTION. Since BEGIN and BEGIN in stored procedures... END conflicts, therefore ** Use of BEGIN is not recommended. **.")]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"automatic-submission-of-things"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#automatic-submission-of-things"}},[t._v("#")]),t._v(" Automatic submission of things")]),t._v(" "),a("p",[t._v("Each SQL statement executed by the user is automatically committed as a separate transaction.\nIf automatic commit of a transaction is turned off, the transaction can only be committed manually by changing the value of AUTOCOMMIT to set how the transaction is committed.\n** The value of AUTOCOMMIT is set to 1 to enable automatic transaction commit, and 0 to disable automatic transaction commit. **.")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("View")]),t._v(" the AUTOCOMMIT "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("value")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("current")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("session")]),t._v(":\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" @"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@AUTOCOMMIT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nTurn "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("off")]),t._v(" automatic "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("transaction")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("commit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("current")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("session")]),t._v(":\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" AUTOCOMMIT"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- After shutdown, you need to manually commit the transaction. If no transaction is committed, terminate the MySQL session directly.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Transactions")]),t._v(" are automatically rolled back"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("h3",{attrs:{id:"holding-point-of-the-transaction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#holding-point-of-the-transaction"}},[t._v("#")]),t._v(" holding point of the transaction")]),t._v(" "),a("p",[t._v("After a transaction is rolled back, all operations within the transaction will be undone. If you want to undo only a portion of the operations within the transaction, you can set a save point in the transaction.\nAfter you set the savepoint, you can roll back the transaction to the specified savepoint. If you no longer need a save point, you can delete it.")]),t._v(" "),a("p",[t._v("** Statement to set a savepoint in a transaction **")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SAVEPOINT")]),t._v(" saves the roll "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("** Statement to roll back the transaction to the save point ** :")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ROLLBACK")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TO")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SAVEPOINT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Save")]),t._v(" the roll "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("strong",[t._v("Delete save point statement")])]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RELEASE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SAVEPOINT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Save")]),t._v(" the roll "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"tip-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tip-2"}},[t._v("#")]),t._v(" Tip")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("Multiple savepoints can be created in a transaction, and the savepoints in the transaction are deleted after the transaction is committed.\nWhen you roll back to a savepoint, savepoints created after that savepoint are also deleted.")]),t._v(" "),a("hr")])}),[],!1,null,null,null);a.default=n.exports}}]);